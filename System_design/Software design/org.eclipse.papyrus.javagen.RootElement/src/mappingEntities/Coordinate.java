// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package mappingEntities;

import javax.vecmath.Point3d;
import javax.vecmath.Vector3d;

/************************************************************/
/**
 * 
 */
public class Coordinate {
	/**
	 * 
	 */
	private double x;
	/**
	 * 
	 */
	private double y;

	
	/**
	 * 
	 * @param x 
	 * @param y 
	 */
	public Coordinate(double x, double y) {
		this.x = x;
		this.y = y;
	}

	/**
	 * 
	 * @param threeDPoint 
	 */
	public Coordinate(Point3d threeDPoint) {
		this.x = threeDPoint.x;
		this.y = threeDPoint.z;
	}

	/**
	 * 
	 * @return 
	 */
	public double getX() {
		return this.x;
	}
	
	public String toString(){
		return String.format("[%.2f,%.2f]", this.x, this.y);
	}

	/**
	 * 
	 * @return 
	 */
	public double getY() {
		return this.y;
	}

	/**
	 * 
	 * @param other 
	 * @return 
	 */
	@Override
	public boolean equals(Object o) {
		if(!(o instanceof Coordinate))
			return false;
		
		Coordinate other = (Coordinate)o;
		
		int thisX = (int)(this.x * 100);
		int thisY = (int)(this.y * 100);
		int thatX = (int)(other.x * 100);
		int thatY = (int)(other.y * 100);

		
		return inRange(thisX, thatX, 0) && inRange(thisY, thatY, 0);
	}

	
	public static boolean isInRange(Coordinate firstCoordinate, Coordinate secondCoordinate, int margin) {
		int thisX = (int)(secondCoordinate.getX() * 100);
		int thisY = (int)(secondCoordinate.getY() * 100);
		
		int thatX = (int)(firstCoordinate.getX() * 100);
		int thatY = (int)(firstCoordinate.getY() * 100);
		return inRange(thisX, thatX, margin) && inRange(thisY, thatY, margin);
	}

	private static boolean inRange(int thisY, int thatY, int margin) {
		return Math.abs(thisY - thatY) <= margin;
	}



};
